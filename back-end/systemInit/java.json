{
	"Questions": [
		{
			"Text": "What is the output of the following?\nclass ChangeIt\n{\nstatic void doIt( int[] z )\n{\nInt[] A = z\nA[0] = 99\n}\n}\nclass TestIt\n{\npublic state void main ( String[] args )\n{\nint myArray = {1, 2, 3, 4, 5} ;\nChangeIt.doIt( myArray );\nFor (int j=0; j<myArray.length; j++ )\nSystem.out.print( myArray[j] + “ “ ) ;\n}\n}",
			"CorrectAnswer": "5 2 3 4 5",
			"AnswerB": "0 2 3 4 5",
			"AnswerC": "5 2 3 4 1",
			"AnswerD": "1 2 3 4 5",
			"Type": "hands on",
			"XPValue": 15,
			"Topic": "Programming Tools"
		},
		{
			"Text": "What is the output of the following?\nClass ChangeIt\n{\nStatic void doIt( int[] z )\n{\nZ[0] = 0\n}\n}\nClass TestIt\n{\npublic static void main ( String[] args )\n{\nint myArray = {1, 2, 3, 4, 5} ;\nChangeIt.doIt( myArray );\nFor (int j=0; j<myArray.length; j++ )\nSystem.out.print( myArray[j] + “ “ ) ;\n}\n}\nClass ChangeIt\n{\nStatic void doIt( int[] z )\n{\nInt temp = z[ z.length-1 ] ;\n Z[0] = temp;\n }\n}\nClass TestIt\n{\npublic static void main ( String[] args )\n{\nint myArray = {1, 2, 3, 4, 5} ;\nChangeIt.doIt( myArray );\nFor (int j=0; j<myArray.length; j++ )\nSystem.out.print( myArray[j] + “ “ ) ;\n}\n}\n",

			"CorrectAnswer": "0 2 3 4 5",
			"AnswerB": "0 1 2 3 4",
			"AnswerC": "5 2 3 4 1",
			"AnswerD": "1 2 3 4 5",
			"Type": "hands on",
			"XPValue": 15,
			"Topic": "JAVA"
		},
		{
			"Text": "What type of parameter must the following method be called with?\nInt myMethod ( double[] ar)\n{\n. . . .\n}\n ",

			"CorrectAnswer": "A reference to an array that contains elements of type double",
			"AnswerB": "An empty double array",
			"AnswerC": "A reference to an array that contains zero or more elements of type int",
			"AnswerD": "An array of any length that contains double and must be named ar",
			"Type": "hands on",
			"XPValue": 15,
			"Topic": "JAVA"
		},
		{
			"Text": "What would display from the following statements? Int [ ] nums = {1,2,3,4,5,6}; System.out.printIn((nums[1] + nums[3]));",
			"CorrectAnswer":"6",
			"AnswerB": "2+4",
			"AnswerC": "1+3",
			"AnswerD": "4",
			"Type": "hands on",
			"XPValue": 15,
			"Topic": "JAVA"
		},
		{
			"Text": "What is the output of the following?\nclass ChangeIt\n{\nstatic void doIt( int[] z )\n{\nInt[] A = z\nA[0] = 99\n}\n}\nclass TestIt\n{\npublic state void main ( String[] args )\n{\nint myArray = {1, 2, 3, 4, 5} ;\nChangeIt.doIt( myArray );\nFor (int j=0; j<myArray.length; j++ )\nSystem.out.print( myArray[j] + “ “ ) ;\n}\n}\n",

			"CorrectAnswer": "99 2 3 4 5",
			"AnswerB": "1 2 3 4 5",
			"AnswerC": "0 2 3 4 5 ",
			"AnswerD": "99 99 99 99 99",
			"Type": "hands on",
			"XPValue": 15,
			"Topic": "JAVA"
		},
		{
			"Text": "What is the output of the following?\nClass LowHighSwap\n{\nstatic void doIt( int[] z )\n{\nInt temp = z[ z.length-1 ]\nz[ z.length-1 ] = Z[0] ;\nz[0] = temp;\n}\n}\nclass TestIt\n{\npublic state void main ( String[] args )\n{\nint myArray = {1, 2, 3, 4, 5} ;\nChangeIt.doIt( myArray );\nFor (int j=0; j<myArray.length; j++ )\nSystem.out.print( myArray[j] + “ “ ) ;\n }\n}\n",


             "CorrectAnswer": "5 2 3 4 1",
			"AnswerB": "1 2 3 4 5",
			"AnswerC": "1 2 3 4 1 ",
			"AnswerD": "5 2 3 4 5",
			"Type": "hands on",
			"XPValue": 15,
			"Topic": "JAVA"
		},
		{
	"Text": "What is the output of the following?\nclass ChangeIt\n{\nstatic void doIt( int[] z )\n{\n z = null \n}\n}\nclass TestIt\n{\npublic state void main ( String[] args )\n{\nint myArray = {1, 2, 3, 4, 5} ;\nChangeIt.doIt( myArray );\nFor (int j=0; j<myArray.length; j++ )\nSystem.out.print( myArray[j] + “ “ ) ;\n}\n }\n",

	"CorrectAnswer": "1 2 3 4 5",
	"AnswerB": "Nothing will be printed",
	"AnswerC": "The program will halt with a run time error",
	"AnswerD": "0 0 0 0 0",
	"Type": "hands on",
	"XPValue": 15,
	"Topic": "JAVA"
		},
		{
			"Text": "The last value in array called ar can be found at index:",
			"CorrectAnswer": "ar.length-1",
			"AnswerB": "0",
			"AnswerC": "1",
			"AnswerD": "ar.length",
			"Type": "hands on",
			"XPValue": 15,
			"Topic": "JAVA"
		},
		{
			"Text": "What does the following method do?\nvoid blur ( char[] z, String st)\n{\nif ( z.length < st.length() ) return;\nfor ( int j=0; < st.length; j++ )\nz[j] = st.charAt( j );\n}\n",

			"CorrectAnswer": "If there are enough slots in the array, it copies characters one by one from the string to the array",
			"AnswerB": "It determines if the array contains the same characters as the strings",
			"AnswerC": "It copies characters from the array to the string",
			"AnswerD": "It creates a new array that contains the same characters as the strings",
			"Type": "hands on",
			"XPValue": 15,
			"Topic": "JAVA"
		},
		{
			"Text": "What is the output of the following?\nclass ChangeIt\n{\nstatic void doIt( int[] z )\n{\nz[0] = z[ z.length-1 ];\n}\n}\nclass TestIt\n{\n public state void main ( String[] args )\n{\nint myArray = {1, 2, 3, 4, 5} ;\nChangeIt.doIt( myArray );\nFor (int j=0; j<myArray.length; j++ )\nSystem.out.print( myArray[j] + “ “ ) ;\n}}\n}\n",

			"CorrectAnswer": "5 2 3 4 5",
			"AnswerB": "1 2 3 4 5",
			"AnswerC": "5 2 3 4 1",
			"AnswerD": "1 2 3 4 1",
			"Type": "hands on",
			"XPValue": 15,
                        "Topic": "JAVA"
		},
		{
			"Text": "Given the declaration : int [ ] ar = {1, 2, 3, 4, 5}; What is the value of ar[4]?\n",
			"CorrectAnswer": "5",
			"AnswerB": "3",
			"AnswerC": "4",
			"AnswerD": "2",
			"Type": "hands on",
			"XPValue": 15,
                        "Topic": "JAVA"
		},
		{
			"Text": "Java uses call by value. Which is the value that is being passed into routine by method call in the following?\ndouble[] rats = {1.2, 3.4, 5.6};\nroutine( rats );",

			"CorrectAnswer": "A reference to the array object rats",
			"AnswerB": "A copy of the array rats",
			"AnswerC": "The value of the elements of Rats",
			"AnswerD": "1.2",
			"Type": "theory",
			"XPValue": 10,
                        "Topic": "JAVA"
		},
		{
			"Text": "Java uses call by value. Which is the value that is being passed into routine by method call in the following?\ndouble[] rats = {1.2, 3.4, 5.6};\nroutine( rats );",

			"CorrectAnswer": "6",
			"AnswerB": "5",
			"AnswerC": "0",
			"AnswerD": "7",
			"Type": "theory",
			"XPValue": 10,
                        "Topic": "JAVA"
		},
		{
			"Text": "What loop will display each of the numbers in this array on a separate line: float [ ] nums= {1.1f, 2.2f, 3.3f};",
			"CorrectAnswer": "for (int i =1; i < 3; i++) System.out.printIn( nums[i]);",
			"AnswerB": "for (int i =0; i < 3; i++) System.out.printIn( nums[i]);",
			"AnswerC": "for (int i =1; i",
			"AnswerD": "for (int I =0; i",
			"Type": "hands on",
			"XPValue": 15,
                        "Topic": "JAVA"
		},
		{
			"Text": "Which statement is true?\npublic class Person {\nprivate String name;\npublic Person(String name) { this.name = name; }\npublic Boolean equals(Person p) {\nreturn p.name.equals(this.name);\n}\n}\n",

			"CorrectAnswer": "The equal method does NOT properly override the Object.equals method",
			"AnswerB": "Compilation fails because the private attribute p.name cannot be accessed in line 5",
			"AnswerC": "To work correctly with hash-based data structures, this class must also implement the hashCode method",
			"AnswerD": "When adding Person objects to a java.util.Set collection, the equals method in line 4 will prevent duplicates.",
			"Type": "hands on",
			"XPValue": 15,
                        "Topic": "JAVA"
		},
		{
			"Text": "Class Test  {\nPublic static void main(String args[]) {\nTry {\n// some code here\n} catch (NullPointerException e1) {\nSystem.out.print( “a” );\n} catch (Exception e2) {\nSystem.out.print( “b” );\n} finally {\nSystem.out.print( “c” );\n}\n }\n}\nIf some sort of exception is thrown at line 34, which output is possible?\n",

			"CorrectAnswer": "c",
			"AnswerB": "a",
			"AnswerC": "b",
			"AnswerD": "abc",
			"Type": "hands on",
			"XPValue": 15,
                        "Topic": "JAVA"
		},
		{
			"Text": "class Test\npublic static void main(String args[]) {\nint x = 0\nint y = 10\ny—;\n++x;\n} while (x < 5);\nSystem.out.print(x + “,” + y);\n}\n}\n",

			"CorrectAnswer": "5,5",
			"AnswerB": "6,5",
			"AnswerC": "4,5",
			"AnswerD": "5",
			"Type": "hands on",
			"XPValue": 15,
                        "Topic": "JAVA"
		},
		{
			"Text": "public void testIfA() {\nif (testIfB(“True”);\nSystem.out.printIn(“True”);\n       } else {\nSystem.out.printIn(“Not true”);\n}\n}\npublic Boolean testIfB(String str) {\nreturn Boolean.value Of(str);\n}\nWhat is the result when method testIfA is invoked?\n",

			"CorrectAnswer": "True",
			"AnswerB": "Not true",
			"AnswerC": "An exception is thrown at runtime",
			"AnswerD": "Compilation fails because of an error at line 12",
			"Type": "hands on",
			"XPValue": 15,
                        "Topic": "JAVA"
		},
		{
			"Text": "Given:\nPublic void go(int x) {\nassert (x > 0);\nswitch(x) {\ncase 2: ;default: assert false;\n       }\n       }\n       private void go2(int x) { assert (x < 0); }\n       Which statement is true?",


			"CorrectAnswer": "Only the assert statements on line 12 is used appropriately",
			"AnswerB": "All of the assert statements are used appropriately",
			"AnswerC": "Only the assert statements on line 15 is used appropriately ",
			"AnswerD": "Only the assert statements on line 15 and 18 are used appropriately",
			"Type": "hands on",
			"XPValue": 15,
                        "Topic": "JAVA"
		},
		{
			"Text": "Which one code fragments will execute the method doStuff() in a separate thread?",
			"CorrectAnswer": "new Thread() {\npublic void run() { doStuff(); }\n};\n",
			"AnswerB": "new Thread() {\npublic void start() { doStuff(); }\n};\n",
			"AnswerC": "new Thread() {\npublic void start() { doStuff(); }\n}.run();\n",
			"AnswerD": "new Thread() {\npublic void start() { doStuff(); }\n}.start();\n",
			"Type": "hands on",
			"XPValue": 15,
            "Topic": "JAVA"
		},
		{
			"Text": "class Test{\npublic static void main(String[] args) {\nfor (int i = 0; i <= 10; i++) {\nif (i > 6) break;\n}\nSystem.out.printIn(i);\n}\n}\nWhat is the result?",

			"CorrectAnswer": "10",
			"AnswerB": "6",
			"AnswerC": "7",
			"AnswerD": "Compilation fails",
			"Type": "hands on",
			"XPValue": 15,
            "Topic": "JAVA"
		},
		{
			"Text": "Which can appropriately be thrown by a programmer using Java SE technology to create  a desktop application?",

			"CorrectAnswer": "NumberFormatException",
			"AnswerB": "ClassCastException",
			"AnswerC": "NullPointerException",
			"AnswerD": "NoClassDefFoundError",
			"Type": "theory",
			"XPValue": 10,
            "Topic": "JAVA"
		},
		{
			"Text": "Given:\nPublic class Person {\nPrivate string name;\nPublic Person(String name) {\nthis.name = name;\n}\nPublic Boolean equals(Object o) {\nIf ( ! ( o instanceof Person) ) return false;\nPerson p = (Person) o;\nReturn p.name.equals(this.name);\n}\n}\n",

			"CorrectAnswer": "Compilation fails because the HashCode method is not overridden",
			"AnswerB": "A hashSet could contain multiple Person objects with the same name",
			"AnswerC": "All Person objects will have the same hashCode because the hashCode is not overridden",
			"AnswerD": "If a HashSet contains more than one Person object with name=”Fred”, then removing another Person, also with the name=”Fred”, will remove them all.",
			"Type": "hands on",
			"XPValue": 15,
        	"Topic": "JAVA"
		},
		{
			"Text": "Which of the following is not OOPS concept in Java?",
			"CorrectAnswer": "Compilation",
			"AnswerB": "Inheritance",
			"AnswerC": " Encapsulation",
			"AnswerD": "Polymorphism",
			"Type": "theory",
			"XPValue": 10,
            "Topic": "JAVA",
            "Explanation": "There are 4 OOPS concepts in Java. Inheritance, Encapsulation, Polymorphism and Abstraction."
		},
		{
			"Text": "Which of the following is a type of polymorphism in Java?",
			"CorrectAnswer": "Compile time polymorphism",
			"AnswerB": "Execution time polymorphism",
			"AnswerC": " Multilevel polymorphism",
			"AnswerD": "Multiple polymorphism",
			"Type": "theory",
			"XPValue": 10,
            "Topic": "JAVA",
            "Explanation": "There are two types of polymorphism in Java. Compile time polymorphism (overloading) and runtime polymorphism (overriding)."  
		},
		{
			"Text": "Which component is used to compile, debug and execute java program?",
			"CorrectAnswer": "JDK",
			"AnswerB": "JVM",
			"AnswerC": "JIT",
			"AnswerD": "JRE",
			"Type": "theory",
			"XPValue": 10,
            "Topic": "JAVA",
            "Explanation": "JDK is a core component of Java Environment and provides all the tools, executables and binaries required to compile, debug and execute a Java Program."
		   },
		   {
			"Text": "Which component is responsible for converting bytecode into machine specific code?",
			"CorrectAnswer": "JVM",
			"AnswerB": "JDK",
			"AnswerC": "JIT",
			"AnswerD": "JRE",
			"Type": "theory",
			"XPValue": 10,
             "Topic": "JAVA",
            "Explanation": "JVM is responsible to converting bytecode to the machine specific code. JVM is also platform dependent and provides core java functions like garbage collection, memory management, security etc"
			},
			{
			"Text": "What will be the output of the following Java program?\nclass selection_statements\n{\npublic static void main(String args[])\n{\nint var1 = 5; \nint var2 = 6;\nif ((var2 = 1) == var1)\nSystem.out.print(var2);\nelse \nSystem.out.print(++var2);\n}\n}\n",
	
			"CorrectAnswer": "2",
			"AnswerB": "1",
			"AnswerC": "3",
			"AnswerD": "4",
			"Type": "hands on",
			"XPValue": 15,
			"Topic": "JAVA",
			"Explanation": "var2 is initialised to 1. The conditional statement returns false and the else part gets executed.\nOutput:\n javac selection_statements.java\n  java selection_statements\n2\n"
		    },

			{		
			"Text": "Which of the following is a valid declaration of an object of class Box?",
			"CorrectAnswer": "Box obj = new Box();(",
			"AnswerB": "Box obj = new Box;",
			"AnswerC": "obj = new Box();",
			"AnswerD": "new Box obj;",
			"Type": "theory",
			"XPValue": 10,
			"Topic": "JAVA"
			},
			{
			"Text": "Which of these statement is incorrect?",
			"CorrectAnswer": "Every class must contain a main() method",
			"AnswerB": "Applets do not require a main() method at all",
			"AnswerC": "There can be only one main() method in a program",
			"AnswerD": "main() method must be made public",
			"Type": "theory",
			"XPValue": 10,
			"Topic": "JAVA",
			"Explanation": "Every class does not need to have a main() method, there can be only one main() method which is made public."
			 },
			 {
			"Text": "Which of these is correct way of inheriting class A by class B?",
			"CorrectAnswer": "class B extends A {}",
			"AnswerB": "class B inherits class A {}",
			"AnswerC": "class B + class A {}",
			"AnswerD": "class B extends class A {}",
			"Type": "theory",
			"XPValue": 10,
			"Topic": "JAVA"
			 },
			{
			"Text": "What would be the result if a class extends two interfaces and both have a method with same name and signature? Let's assume that the class is not implementing that method.",
			"CorrectAnswer": "Compile time error",
			"AnswerB": "Runtime error",
			"AnswerC": "Code runs successfully",
			"AnswerD": "First called method is executed successfully",
			"Type": "theory",
			"XPValue": 10,
        	"Topic": "JAVA",
            "Explanation": "In case of such conflict, compiler will not be able to link a method call due to ambiguity. It will throw compile time error."
			},
			{
			"Text": "Which of the following is used for implementing inheritance through an interface?",
			"CorrectAnswer": "implements",
			"AnswerB": "inherited",
			"AnswerC": "using",
			"AnswerD": "extends",
			"Type": "theory",
			"XPValue": 10,
            "Topic": "JAVA",
            "Explanation": "Interface is implemented using implements keyword. A concrete class must implement all the methods of an interface, else it must be declared abstract."
           	},   
			{
			"Text": "What is not type of inheritance?",
			"CorrectAnswer": "Double inheritance",
			"AnswerB": "Hierarchical inheritance",
			"AnswerC": "Single inheritance",
			"AnswerD": "Multiple inheritance",
			"Type": "theory",
			"XPValue": 10,
            "Topic": "JAVA",
            "Explanation": "Inheritance is way of acquiring attributes and methods of parent class. Java supports hierarchical inheritance directly."
			},
			{
			"Text": "Which of these is not a correct statement?",
			"CorrectAnswer": "Abstract class can be initiated by new operator",
			"AnswerB": "Every class containing abstract method must be declared abstract",
			"AnswerC": "Abstract class defines only the structure of the class not its implementation",
			"AnswerD": "Abstract class can be inherited",
			"Type": "theory",
			"XPValue": 10,
            "Topic": "JAVA",
        	"Explanation": "Abstract class cannot be directly initiated with new operator, Since abstract class does not contain any definition of implementation it is not possible to create an abstract object"
           	},
        	{
			"Text": "Which of these is a wrapper around everything associated with a reply from an http server?",
			"CorrectAnswer": "HttpResponse",
			"AnswerB": " HTTP",
			"AnswerC": "AHttpRequest",
			"AnswerD": " httpserver",
			"Type": "theory",
			"XPValue": 10,
            "Topic": "JAVA",
            "Explanation": " HttpResponse is wrapper around everything associated with a reply from an http server"
           	},
			{
			"Text": "Which of these is a protocol for breaking and sending packets to an address across a network?",
			"CorrectAnswer": "TCP/IP",
			"AnswerB": "DNS",
			"AnswerC": "Socket",
			"AnswerD": "Proxy Server",
			"Type": "theory",
			"XPValue": 10,
            "Topic": "JAVA",
            "Explanation": "TCP/IP – Transfer control protocol/Internet Protocol is used to break data into small packets an send them to an address across a network."
        	} 
	]
}